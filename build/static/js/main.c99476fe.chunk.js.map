{"version":3,"sources":["redux/auth/authActions.js","redux/user/userActions.js","views/helpers/PrivateRoute.js","views/helpers/PublicRoute.js","routers.js","App.js","redux/auth/authReducer.js","redux/user/userReducer.js","redux/store.js","index.js"],"names":["authAction","signupRequest","createAction","signupSuccess","signupError","signinRequest","signinSuccess","signinError","signoutRequest","signoutSuccess","signoutError","recoveryPassRequest","recoveryPassSuccess","recoveryPassError","userAction","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","PrivateRoute","Component","component","isAuthenticated","routeProps","render","props","to","PublicRoute","routers","path","label","exact","lazy","private","axios","defaults","baseURL","process","withCredentials","App","token","useSelector","auth","useState","flagAuth","setflagAuth","useEffect","headers","common","verifyToken","fallback","routes","map","route","tokenReducer","createReducer","actions","_","payload","__","combineReducers","userReducer","state","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","user","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c99476fe.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst signupRequest = createAction(\"auth/signupRequest\");\r\nconst signupSuccess = createAction(\"auth/signupSuccess\");\r\nconst signupError = createAction(\"auth/signupError\");\r\n\r\nconst signinRequest = createAction(\"auth/signinRequest\");\r\nconst signinSuccess = createAction(\"auth/signinSuccess\");\r\nconst signinError = createAction(\"auth/signinError\");\r\n\r\nconst signoutRequest = createAction(\"auth/signoutRequest\");\r\nconst signoutSuccess = createAction(\"auth/signoutSuccess\");\r\nconst signoutError = createAction(\"auth/signoutError\");\r\n\r\nconst recoveryPassRequest = createAction(\"auth/recoveryPassRequest\");\r\nconst recoveryPassSuccess = createAction(\"auth/recoveryPassSuccess\");\r\nconst recoveryPassError = createAction(\"auth/recoveryPassError\");\r\n\r\nconst authAction = {\r\n  signupRequest,\r\n  signupSuccess,\r\n  signupError,\r\n  signinRequest,\r\n  signinSuccess,\r\n  signinError,\r\n  signoutRequest,\r\n  signoutSuccess,\r\n  signoutError,\r\n  recoveryPassRequest,\r\n  recoveryPassSuccess,\r\n  recoveryPassError,\r\n};\r\n\r\nexport default authAction;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst getCurrentUserRequest = createAction(\"user/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"user/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"user/getCurrentUserError\");\r\n\r\nconst userAction = {\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n\r\nexport default userAction;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={(props) =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <>\r\n    <Route\r\n      {...routeProps}\r\n      render={(props) =>\r\n        isAuthenticated ? (\r\n          <Redirect to=\"/dashboard\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  </>\r\n);\r\n\r\nexport default PublicRoute;\r\n","import { lazy } from \"react\";\r\n\r\nconst routers = [\r\n  {\r\n    path: \"/\",\r\n    label: \"Premier-club\",\r\n    exact: true,\r\n    component: lazy(() => import(\"./views/Home\")),\r\n    private: false,\r\n  },\r\n  {\r\n    path: \"/signin\",\r\n    label: \"signIn\",\r\n    exact: true,\r\n    component: lazy(() => import(\"./views/Signin\")),\r\n    private: false,\r\n  },\r\n  {\r\n    path: \"/signup/:referral\",\r\n    label: \"signUp\",\r\n    exact: false,\r\n    component: lazy(() => import(\"./views/Signup\")),\r\n    private: false,\r\n  },\r\n  {\r\n    path: \"/recovery-password\",\r\n    label: \"recovery-password\",\r\n    exact: true,\r\n    component: lazy(() => import(\"./views/RecoveryPassword\")),\r\n    private: false,\r\n  },\r\n  {\r\n    path: \"/verification/:verificationToken\",\r\n    label: \"Verify\",\r\n    exact: false,\r\n    component: lazy(() => import(\"./views/TokenVerifyView\")),\r\n    private: false,\r\n  },\r\n  {\r\n    path: \"/dashboard\",\r\n    label: \"Premier-club\",\r\n    exact: false,\r\n    component: lazy(() => import(\"./views/Main\")),\r\n    private: true,\r\n  },\r\n];\r\n\r\nexport default routers;\r\n","import { Suspense, useEffect, useState } from \"react\";\r\nimport { Switch, BrowserRouter, Redirect } from \"react-router-dom\";\r\n\r\nimport PrivateRoute from \"./views/helpers/PrivateRoute\";\r\nimport PublicRoute from \"./views/helpers/PublicRoute\";\r\nimport routes from \"./routers\";\r\n// import { verify, decode } from \"jsonwebtoken\";\r\n// const jwt = require(\"jsonwebtoken\");\r\n\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\naxios.defaults.baseURL = process.env.REACT_APP_DOMAIN_ADDRESS;\r\naxios.defaults.withCredentials = true;\r\n\r\n\r\nfunction verifyToken(token) {\r\n  if (token) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction App() {\r\n  const token = useSelector(({ auth }) => auth.token);\r\n  const [flagAuth, setflagAuth] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n    setflagAuth(() => verifyToken(token));\r\n  }, [token]);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Suspense fallback={<p>Londing</p>}>\r\n        <Switch>\r\n          {routes.map((route) =>\r\n            route.private ? (\r\n              <PrivateRoute\r\n                key={route.label}\r\n                {...route}\r\n                isAuthenticated={flagAuth}\r\n              />\r\n            ) : (\r\n              <PublicRoute\r\n                key={route.label}\r\n                {...route}\r\n                isAuthenticated={flagAuth}\r\n              />\r\n            )\r\n          )}\r\n          {/* <Route component={NotFound} /> */}\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </Suspense>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './authActions';\r\n\r\nconst tokenReducer = createReducer(null, {\r\n  [actions.signinSuccess]: (_, actions) => {\r\n    return actions.payload.token;\r\n  },\r\n  [actions.signoutSuccess]: (_, __) => null,\r\n  [actions.signoutError]: (_, __) => null,\r\n  [actions.signinError]: (_, __) => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  token: tokenReducer,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./userActions\";\r\n\r\nconst userReducer = createReducer(\r\n  {},\r\n  {\r\n    [actions.getCurrentUserSuccess]: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n      };\r\n    },\r\n  }\r\n);\r\n\r\nexport default userReducer;\r\n","import {\r\n  persistReducer,\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport authReducer from \"./auth/authReducer\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport userReducer from \"./user/userReducer\";\r\n\r\n// import childrenReducer from \"./children/childrenReducer\";\r\n// import habitReducer from \"./habit/habitReducer\";\r\n// import taskReducer from \"./tasks/taskReducer\";\r\n// import userGifts from \"./gifts/giftReducer\";\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\", \"refreshToken\"],\r\n};\r\n\r\n// const childrenPersistConfig = {\r\n//   key: 'children',\r\n//   storage,\r\n// };\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    user: userReducer,\r\n    // children: childrenReducer,\r\n    // habits: habitReducer,\r\n    // tasks: taskReducer,\r\n    // gifts: userGifts,\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./normalize.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}